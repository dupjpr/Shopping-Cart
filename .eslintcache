[{"/home/pakman/Projects/React/shopping-cart/src/index.js":"1","/home/pakman/Projects/React/shopping-cart/src/App.js":"2","/home/pakman/Projects/React/shopping-cart/src/components/Products.jsx":"3","/home/pakman/Projects/React/shopping-cart/src/components/Header.jsx":"4","/home/pakman/Projects/React/shopping-cart/src/components/CartShop.jsx":"5"},{"size":146,"mtime":1611674942518,"results":"6","hashOfConfig":"7"},{"size":1964,"mtime":1612224081298,"results":"8","hashOfConfig":"7"},{"size":1239,"mtime":1612221750748,"results":"9","hashOfConfig":"7"},{"size":793,"mtime":1612221750744,"results":"10","hashOfConfig":"7"},{"size":1731,"mtime":1612221750719,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},"9hnw9v",{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"/home/pakman/Projects/React/shopping-cart/src/index.js",[],["26","27"],"/home/pakman/Projects/React/shopping-cart/src/App.js",["28"],"import React, { useEffect, useState } from 'react';\nimport CartShop from './components/CartShop';\nimport Header from './components/Header';\nimport Products from './components/Products';\n\nimport './app.css';\n\nfunction App() {\n\n  const [products, setProducts] = useState([]);\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [cartAction, setCartAction] = useState('cart');\n\n  useEffect(() => {\n    fetch('https://www.themealdb.com/api/json/v1/1/filter.php?c=Seafood')\n      .then(response => response.json())\n      .then(data => {\n        const newSet = data.meals.map((product) => { return { ...product, price: 100 } });\n        setProducts(newSet);\n      });\n      console.log('cargando .......');\n  }, []);\n\n  const handleClickCart = (id) => {\n    const arrayDeleted = cart.filter((product) => product.idMeal === id)\n    const newCart = cart.filter((product) => product.idMeal !== id)\n    setCart(newCart);\n    setTotal(total - arrayDeleted[0].quantity * arrayDeleted[0].price);\n  };\n\n  const handleClick = (e, id, units, setUnits, element) => {\n    const selectProduct = products.filter((product) => product.idMeal === id);\n    const checkProduct = cart.some((item) => (item.idMeal === id));\n    if (!checkProduct) {\n      setCart([...cart, { ...selectProduct[0], quantity: parseInt(units) }]);\n      setUnits(1);\n      setTotal(total + parseInt(units) * selectProduct[0].price);\n      if (element.length != 0) {\n        element.value = 1;\n      }\n    }\n  }\n\n  const handleClickBag = () => {\n    const classActionBag = 'cart-action';\n    setCartAction(classActionBag);\n  }\n\n  return (\n\n    <div className=\"App\">\n      <Header handleClickBag={handleClickBag} cart={cart} total={total}/>\n      <Products products={products} handleClick={handleClick} />\n      <CartShop cart={cart} handleClickCart={handleClickCart} total={total} cartAction={cartAction} setCartAction={setCartAction}/>\n    </div>\n\n  );\n}\n\nexport default App;","/home/pakman/Projects/React/shopping-cart/src/components/Products.jsx",[],"/home/pakman/Projects/React/shopping-cart/src/components/Header.jsx",[],"/home/pakman/Projects/React/shopping-cart/src/components/CartShop.jsx",["29"],"import React, { useState } from 'react';\n\nimport './style/cartShop.css';\n\nconst CartShop = ({ cart, handleClickCart, total, cartAction, setCartAction }) => {\n\n\n    const handleClickCloseCart = () => {\n        if (cartAction === 'cart-action') {\n            setCartAction('cart');\n        }\n    };\n\n    return (\n        <div className={cartAction} >\n            <div className=\"cart-header\">\n                <h2>Your Dishes</h2>\n                <p onClick={(e) => handleClickCloseCart(e)}>x</p>\n                <hr />\n            </div>\n            {cart.map((product) => (\n                <div className=\"cart-item\" key={product.idMeal}>\n                    <div className=\"cart-item-topSection\">\n                        <div className=\"cart-item-img\">\n                            <img src={product.strMealThumb} alt=\"product\" />\n                        </div>\n                        <div className=\"cart-item-description\">\n                            <h4>{product.strMeal}</h4>\n                            <p>{product.quantity} X $ {product.price}</p>\n                        </div>\n                    </div>\n                    <div className=\"cart-item-bottomSection\">\n                        <span className='cart-item-bottomSection-subT'>Subtotal: $ {product.price * product.quantity}</span>\n                        <span onClick={() => handleClickCart(product.idMeal)}><i class=\"far fa-minus-square\"></i></span>\n                    </div>\n                </div>\n            ))}\n            <div className=\"cart-total\">\n                <hr />\n                <span>Total: $ {total}</span>\n                <button className='cart-total-button'>PAY</button>\n            </div>\n        </div>\n    );\n}\n\nexport default CartShop;",["30","31"],{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"36","severity":1,"message":"37","line":39,"column":26,"nodeType":"38","messageId":"39","endLine":39,"endColumn":28},{"ruleId":"40","severity":1,"message":"41","line":1,"column":17,"nodeType":"42","messageId":"43","endLine":1,"endColumn":25},{"ruleId":"32","replacedBy":"44"},{"ruleId":"34","replacedBy":"45"},"no-native-reassign",["46"],"no-negated-in-lhs",["47"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["46"],["47"],"no-global-assign","no-unsafe-negation"]